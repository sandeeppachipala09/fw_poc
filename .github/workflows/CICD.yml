name: Deploy
 
on:
  pull_request_review:
    types: [submitted]
    paths:
      - migrations/**
  workflow_dispatch:
 
env:
 
  FLYWAY_LICENSE_KEY: ${{ secrets.FLYWAY_LICENSE_KEY }} 
  ACTIONS_RUNNER_DEBUG: true
 
jobs:
  
  dev:
    if: github.event.review.state == 'APPROVED'
    name: Deploy Dev
    runs-on: self-hosted
    environment: 'Dev' 
    env:
      databaseName: ${{ secrets.databaseName}}
      JDBC: ${{ secrets.JDBC }}
 
    steps:
      - uses: actions/checkout@v4
        
      - name: Migrate Dev DB
        if: ${{ true }}
        run: |
          $basePath = Get-Location
          $flywayTomlPath = Join-Path $basePath "flyway.toml"
          $flywayUserTomlPath = Join-Path $basePath "flyway.user.toml"
          flyway migrate -configFiles="$flywayTomlPath,$flywayUserTomlPath" -environment=Dev

      - name: archive-dev-artifacts
        run: |
          pwd
          mkdir dev_env
          flyway check -code -changes -dryrun -configFiles="C:\Users\spachipala\actions-runner\_work\fw_poc\fw_poc\flyway.toml,C:\Users\spachipala\actions-runner\_work\fw_poc\fw_poc\flyway.user.toml" -workingDirectory="C:\Users\spachipala\actions-runner\_work\fw_poc\fw_poc" -environment=Dev
          mv report.json .\dev_env\
          mv report.html .\dev_env\
          cd dev_env
          ls
          
      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@v4
        with: 
          name: assets-for-download-dev
          path: dev_env



  test:
    needs: dev
    name: Deploy Test
    runs-on: self-hosted
    environment: 'test' 
    if: ${{ true }} 
    env:
      databaseName: ${{ secrets.databaseName}}
      JDBC: ${{ secrets.JDBC }}
      pauseForCodeReview: true
 
    steps:
      - uses: actions/checkout@v4
        
      - name: Migrate test DB
        if: ${{ true }}
        run: |
          $basePath = Get-Location
          $flywayTomlPath = Join-Path $basePath "flyway.toml"
          $flywayUserTomlPath = Join-Path $basePath "flyway.user.toml"
          flyway migrate -configFiles="$flywayTomlPath,$flywayUserTomlPath" -environment=Test

      - name: archive-build-artifacts
        run: |
          mkdir test_env
          flyway check -code -changes -dryrun -configFiles="C:\Users\spachipala\actions-runner\_work\fw_poc\fw_poc\flyway.toml,C:\Users\spachipala\actions-runner\_work\fw_poc\fw_poc\flyway.user.toml" -workingDirectory="C:\Users\spachipala\actions-runner\_work\fw_poc\fw_poc" -environment=Dev
          mv report.json .\test_env\
          mv report.html .\test_env\
          cd test_env
          ls
          
      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@v4
        with: 
          name: assets-to-download-test
          path: test_env


  prod:
    needs: test
    name: Deploy Production
    runs-on: self-hosted
    environment: 'prod' 
    if: ${{ true }} 
    env:
      databaseName: ${{ secrets.databaseName}}
      JDBC: ${{ secrets.JDBC }}
      pauseForCodeReview: true
 
    steps:
      - uses: actions/checkout@v3
        
      - name: Migrate Build DB
        if: ${{ true }}
        run: |
          #$basePath = Get-Location
          #$flywayTomlPath = Join-Path $basePath "flyway.toml"
          #$flywayUserTomlPath = Join-Path $basePath "flyway.user.toml"
          flyway migrate -environment=Prod
          #flyway check -changes -code -dryrun -environment=Test
