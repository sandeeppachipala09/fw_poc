name: Generate migration files
  
on:
  pull_request:
    types: [review_requested]
    paths:
      - schema-model/**
  workflow_dispatch:
  
jobs:
  Branch_to_push:
    runs-on: self-hosted
    #if: github.event.review.state == 'approved'
    env:
      branch_name: $env:GITHUB_HEAD_REF

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        #with:
        #  ref: 'refs/heads/${branch_name}'

      - name: generate migration files
        shell: powershell 
        run: |
          pwd
          $branchname = ${{ env.branch_name }}
          git pull origin $branchname
          git branch
          git checkout $branchname
          git branch

          $basePath = Get-Location
          $flywayTomlPath = Join-Path $basePath "flyway.toml"
          $schemaDeltasPath = Join-Path $basePath "schemaDeltas.zip"
          $deploymentDeltasPath = Join-Path $basePath "deploymentDeltas.zip"
          $outputFolderPath = Join-Path $basePath "migrations"

          #$schemaDiffs = flyway-dev diff -p $flywayTomlPath --i-agree-to-the-eula --from=SchemaModel --to=dev -a $schemaDeltasPath --output json | ConvertFrom-Json
          #flyway-dev apply -p $flywayTomlPath -a $schemaDeltasPath -c $schemaDiffs.differences.id --verbose --i-agree-to-the-eula
          flyway-dev diff -p $flywayTomlPath --i-agree-to-the-eula --from=SchemaModel --to=Migrations -a $deploymentDeltasPath
          $changes = flyway-dev take -p $flywayTomlPath -a $deploymentDeltasPath --i-agree-to-the-eula
          flyway-dev generate -p $flywayTomlPath -a $deploymentDeltasPath -c $changes --i-agree-to-the-eula --outputFolder=$outputFolderPath
          git status

      - name: push the changes back
        shell: powershell
        run: |
         git branch
         git status
         git add .
         git commit -m "Adding new migration files"
         git push
